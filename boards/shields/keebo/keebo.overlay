#include <dt-bindings/zmk/matrix_transform.h>
#include "keebo-layout.dtsi"
#include <dt-bindings/led/led.h>

/ {

    chosen {
        zmk,physical-layout = &physical_layout0;
        zmk,underglow = &led_strip;
    };

    &spi2 {
        status = "okay";
        cs-gpios = <&gpio1 3 GPIO_ACTIVE_LOW>;
        shifter: 595@0 {
            compatible = "zmk,gpio-595";
            status = "okay";
            gpio-controller;
            spi-max-frequency = <200000>;
            reg = <0>;
            #gpio-cells = <2>;
            ngpios = <8>;
        };
    };

    kscan0: kscan {
        // compatible = "zmk,kscan-gpio-custom";
        // wakeup-source;
        // cols = <14>;
        // debounce-period = <5>;
        // polling-interval-msec = <1>;
        // in-addr-gpios
        // = <&gpio1 3 GPIO_ACTIVE_HIGH>
        // , <&gpio1 2 GPIO_ACTIVE_HIGH>
        // , <&gpio0 27 GPIO_ACTIVE_HIGH>
        // ;
        // in-data-gpios
        // = <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        // , <&gpio1 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        // ;
        // output-gpios
        // = <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        // , <&gpio1 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        // , <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        // , <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        // , <&gpio1 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        // ;

        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "col2row";
        col-gpios
            = <>

        row-gpios
            = <>
    };

    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <14>; 
        rows = <5>; 
        map = < RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) 
                RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
                RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)  
                RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13) 
                RC(4,0) RC(4,1) RC(4,2)                 RC(4,5)                         RC(4,9) RC(4,10) RC(4,11) RC(4,12) RC(4,13) 
        >;
    };

    encoder0: encoder {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <30>;
        status = "okay";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder0>;
        triggers-per-rotation = <15>;
    };

};

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 10)>,
                    <NRF_PSEL(SPIM_SCK, 1, 11)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 10)>,
                    <NRF_PSEL(SPIM_SCK, 1, 11)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <14>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};

&physical_layout0 {
    kscan = <&kscan0>;
    transform = <&default_transform>;
};